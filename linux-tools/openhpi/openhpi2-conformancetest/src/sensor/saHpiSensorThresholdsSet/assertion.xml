<assertions spec="HPI-B.01.01" function="saHpiSensorThresholdsSet">
  <assertion id="1" line="P29-44:P29-46">
   Call saHpiSensorThresholdsSet passing in a bad ResourceID.
   Expected return:  call returns SA_ERR_HPI_INVALID_RESOURCE
  </assertion>
  <assertion id="2" line="P29-47:P29-49">
   Call saHpiSensorThresholdsSet passing in a bad SessionId.
   Expected return:  call returns SA_ERR_HPI_INVALID_SESSION
  </assertion>
  <assertion id="3" line="P82-16:P82-16">
   Call saHpiSensorThresholdsSet with valid threshold at the edge of
   one range value
   Expected return: SA_OK
  </assertion>
  <assertion id="6" line="P82-19:P82-20">
   Call saHpiSensorThresholdsSet on a resource which does
   not support sensors.
   Expected return:  call returns with SA_ERR_HPI_CAPABILITY
  </assertion>
  <assertion id="7" line="P82-21:P82-21">
   Call saHpiSensorThresholdsSet passing in a invalid  
   Sensor Number.
   Expected return:  call returns with SA_ERR_HPI_NOT_PRESENT
  </assertion>
  <assertion id="8" line="P82-23:P82-23">
   Call saHpiSensorThresholdsSet on a sensor which thresholds
   do not have write permissions.
   Expected return:  call returns with SA_ERR_HPI_INVALID_CMD
  </assertion>
  <assertion id="9" line="P82-24:P82-25">
   Call saHpiSensorThresholdsSet on a sensor which thresholds
   are not accessible.
   Expected return:  call returns with SA_ERR_HPI_INVALID_CMD
  </assertion>
  <assertion id="10" line="P82-26:P82-27">
   Set the critical upper threshold to an out-of-range value.
   Expected return: SA_ERR_HPI_INVALID_CMD.
  </assertion>
  <assertion id="11" line="P82-26:P82-27">
   Set the critical lower threshold to an out-of-range value.
   Expected return: SA_ERR_HPI_INVALID_CMD.
  </assertion>
  <assertion id="12" line="P82-29:P82-29">
   Call function on a sensor which thresholds are set out of order.
   Expected return: SA_ERR_HPI_INVALID_DATA.
  </assertion>
  <assertion id="13" line="P82-30:P82-30">
   Call function on a sensor which thresholds are set 
   with a negative hysteresis value.
   Expected return:  call returns with SA_ERR_HPI_INVALID_DATA
  </assertion>
  <assertion id="14" line="P82-17:P82-18">
   Call function on a sensor which thresholds are set with invalid type
   with that in the DataFormat.
   Expected return:  SA_ERR_HPI_INVALID_DATA.
  </assertion>
  <assertion id="15" line="P82-16:P82-16">
   Verify that two or more thresholds can be set with one call.
   Expected return: SA_OK.
  </assertion>
  <assertion id="16" line="P82-16:P82-16">
   Attempt to change a threshold sensor by setting the
   the UpMinor threshold to a valid value and the PosThdHysteresis
   value to a negative value.  The set should fail and the
   the UpMinor value should not be changed.
  </assertion>
  <assertion id="17" line="P82-16:P82-16">
   Verify that the implementation isn't adding the thresholds one value
   at a time and thus potentially responding with an out-of-order error.
   Expected return: SA_OK.
  </assertion>
</assertions>
