<assertions spec="HPI-B.01.01" function="saHpiAlarmAdd">
  <assertion id="1" line="P29-47:P29-49">
      Call the function passing in an invalid sessionId.
      saHpiAlarmAdd() returns SA_ERR_HPI_INVALID_SESSION.
  </assertion>
  <assertion id="2" line="P72-12:P72-12">
      In each domain, create an user alarm and remove it.
      saHpiAlarmAdd() returns SA_OK.
  </assertion>
  <assertion id="3" line="P72-13:P72-13">
      Call the function passing in a NULL pointer for Alarm
      saHpiAlarmAdd() returns SA_ERR_HPI_INVALID_PARAMS.
  </assertion>
  <assertion id="4" line="P72-14:P72-15">
      Call the function passing in a bad severity in the alarm
      structure.
      saHpiAlarmAdd() returns SA_ERR_HPI_INVALID_PARAMS.
  </assertion>
  <assertion id="5" line="P72-16:P72-17">
      Set the Alarm->AlarmCond.Type to something other than 
      SAHPI_STATUS_COND_TYPE_USER.
      saHpiAlarmAdd() returns SA_ERR_HPI_INVALID_PARAMS.
  </assertion>
  <assertion id="6" line="P72-21:P72-22">
      Add a new user alarm and test the returned value for AlarmId 
      and Timestamp.
      saHpiAlarmAdd() returns SA_OK and the AlarmId and the Timestamp
      are set to a new value.
  </assertion>
  <assertion id="7" line="P188-1:P188-44">
      In each domain, create an user alarm and remove it.
      Verify that enumerations and other fields are valid.
      saHpiAlarmAdd() returns SA_OK.
  </assertion>
  <assertion id="8" line="P72-18:P72-19">
      Add more user alarms than the DAT can hold.
      Expected return: SA_ERR_HPI_OUT_OF_SPACE
  </assertion>
</assertions>
